diff --git a/node_modules/realm/CMakeLists.txt b/node_modules/realm/CMakeLists.txt
index 2df55d0..fd79ba1 100644
--- a/node_modules/realm/CMakeLists.txt
+++ b/node_modules/realm/CMakeLists.txt
@@ -1,5 +1,43 @@
+# On macOS, search Homebrew for keg-only versions of Bison and Flex. Xcode does
+# not provide new enough versions for us to use.
+if (CMAKE_HOST_SYSTEM_NAME MATCHES "Darwin")
+    execute_process(
+        COMMAND brew --prefix bison
+        RESULT_VARIABLE BREW_BISON
+        OUTPUT_VARIABLE BREW_BISON_PREFIX
+        OUTPUT_STRIP_TRAILING_WHITESPACE
+    )
+    if (BREW_BISON EQUAL 0 AND EXISTS "${BREW_BISON_PREFIX}")
+        message(STATUS "Found Bison keg installed by Homebrew at ${BREW_BISON_PREFIX}")
+        set(BISON_EXECUTABLE "${BREW_BISON_PREFIX}/bin/bison")
+    endif()
+
+    execute_process(
+        COMMAND brew --prefix flex
+        RESULT_VARIABLE BREW_FLEX
+        OUTPUT_VARIABLE BREW_FLEX_PREFIX
+        OUTPUT_STRIP_TRAILING_WHITESPACE
+    )
+    if (BREW_FLEX EQUAL 0 AND EXISTS "${BREW_FLEX_PREFIX}")
+        message(STATUS "Found Flex keg installed by Homebrew at ${BREW_FLEX_PREFIX}")
+        set(FLEX_EXECUTABLE "${BREW_FLEX_PREFIX}/bin/flex")
+    endif()
+endif()
+
 # compiling for Node.js, need to set up toolchains before project() call
-if(DEFINED CMAKE_JS_VERSION)
+if(CMAKE_SYSTEM_NAME STREQUAL "Android")
+    set(ANDROID ON)
+    set(APPLE OFF)
+    # Optimize for size vs. performance for Android. The has the following implications:
+    # - Add `-ffunction-sections` and `-fdata-sections`. This requires that `-Wl,-gc-sections` are used when creating
+    #   the final .so file.
+    # - `-fstrict-aliasing` is inherited from NDK r10e.
+    # - `-fomit-frame-pointer` is inherited from NDK r10e.
+    # - On some architectures char is unsigned by default. Make it signed
+    # - Compile with -Oz in Release because on Android we favor code size over performance
+    #
+    add_compile_options(-fdata-sections -ffunction-sections -fomit-frame-pointer -fsigned-char -fstrict-aliasing -funwind-tables -no-canonical-prefixes $<$<CONFIG:Release>:-Oz>)
+elseif(DEFINED CMAKE_JS_VERSION)
     if(CMAKE_HOST_SYSTEM_NAME STREQUAL "Windows")
         set(CMAKE_SYSTEM_VERSION 8.1)
         if(CMAKE_GENERATOR_PLATFORM MATCHES "^[Ww][Ii][Nn]32$")
diff --git a/node_modules/realm/cmake/NodeJSTargets.cmake b/node_modules/realm/cmake/NodeJSTargets.cmake
index 7459dcb..49e1319 100644
--- a/node_modules/realm/cmake/NodeJSTargets.cmake
+++ b/node_modules/realm/cmake/NodeJSTargets.cmake
@@ -7,7 +7,17 @@ execute_process(COMMAND node -p "require('node-addon-api').include"
 string(REPLACE "\"" "" NODE_ADDON_API_DIR ${NODE_ADDON_API_DIR})
 
 # Define an interface target with the cmake-js headers and libraries
-add_library(NodeJS INTERFACE)
+add_library(NodeJS SHARED IMPORTED)
+
+set_target_properties( # Specifies the target library.
+                       NodeJS
+
+                       # Specifies the parameter you want to define.
+                       PROPERTIES IMPORTED_LOCATION
+
+                       # Provides the path to the library you want to import.
+                       ${NODE_BINARY} )
+
 target_include_directories(NodeJS INTERFACE ${CMAKE_JS_INC} ${NODE_ADDON_API_DIR})
 target_link_libraries(NodeJS INTERFACE ${CMAKE_JS_LIB})
 
